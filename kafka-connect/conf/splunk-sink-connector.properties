# Splunk Sink Connector configuration
# See https://docs.splunk.com/Documentation/KafkaConnect/2.0.9/User/ConfigureSplunkKafkaConnect
# See https://github.com/splunk/kafka-connect-splunk

name=SplunkSinkConnector
connector.class=com.splunk.kafka.connect.SplunkSinkConnector

tasks.max=1

# The kafka topic is created at the run.sh script.
topics=splunk_topic

# Create an Index On the Splunk server at http://localhost:8000
#   * Go to Settings > Indexes > New Index
splunk.indexes=main

# On the Splunk server at http://localhost:8000
#   * Go to Settings > Data Inputs > HTTP Event Collector > Global Settings.
#   * Click the Enabled button for the "All Tokens" option.
#   * In the HTTP Port Number field, specify a port number for the HEC to listen on. The default is 8088.
splunk.hec.uri=http://splunk:8088

# On the Splunk server at http://localhost:8000
#   * Go to Settings > Data Inputs.
#   * Click +Add New in the HTTP Event Collector row to create a new HEC token.
#   * In the Name field, specify a name for the HEC token. We assume 'KAFKA_HEC_TOKEN'
#   * Click Next.
#   * In the Index section, select the index in which Splunk stores the HEC event data. We assume 'kafka_index'.
#   * Click Review and confirm all settings are correct.
#   * Click Submit to create the HEC token.
splunk.hec.token=751ba372-ae65-4722-b2a8-058e149d19ac

# Enable this setting to ingest data using the /raw HEC endpoint instead of the /event HEC endpoint.
# By default, this setting is false and the /event HEC endpoint is used.
splunk.hec.raw=false

# When set to true, the connector polls event ACKs for POST events before check-pointing the Kafka offsets.
# This setting enables guaranteed delivery and prevents data loss but may result in lower overall throughput.
splunk.hec.ack.enabled=false

# Total HEC Channels used to post events to Splunk.
# When enabling HEC ACK, setting to the same or 2X number of indexers is generally good.
splunk.hec.total.channels=2
