#   Version 9.0.2
#
# Configure Universal Forwarder data outputs.
#
# Outputs.conf determines how the forwarder sends data to
# receiving Splunk instances, either indexers or other forwarders.
#
# To use one or more of these configurations, copy the configuration block into
# outputs.conf in /opt/splunkforwarder/etc/system/local/.
# The Universal Forwarder must be restarted for configurations to take effect.
#
# Refer to: https://docs.splunk.com/Documentation/Splunk/9.0.2/Admin/Outputsconf
#

# Specify a target group for an HOST:PORT which consists of a single receiver.
# This is the simplest possible configuration; it sends data to
# the Confluent S2S Source Connector host on port 9997.
[tcpout:splunk_s2s_connector]
server=connect:9997

# Whether or not to use indexer acknowledgment.
# Indexer acknowledgment is an optional capability on forwarders that helps
# prevent loss of data when sending data to an indexer.
# A value of "true" means the forwarder retains a copy of each sent event
# until the receiving system sends an acknowledgment.
# * The receiver sends an acknowledgment when it has fully handled the event
#   (typically when it has written it to disk in indexing).
# * If the forwarder does not receive an acknowledgment, it resends the data
#   to an alternative receiver.
# * NOTE: The maximum memory used for the outbound data queues increases
#   significantly by default (500KB -> 28MB) when the 'useACK' setting is
#   enabled. This is intended for correctness and performance.
# A value of "false" means the forwarder considers the data fully processed
#  when it finishes writing it to the network socket.
# You can configure this setting at the [tcpout] or [tcpout:<target_group>]
#  stanza levels. You cannot set it for individual servers at the
#  [tcpout-server: ...] stanza level.
# Default: false
useACK=false

# Whether or not the forwarder uses SSL to connect to the receiver, or relies
# on the 'clientCert' setting to be active for SSL connections.
# You do not need to set 'clientCert' if 'requireClientCert' is set to
#  "false" on the receiver.
# A value of "true" means the forwarder uses SSL to connect to the receiver.
# A value of "false" means the forwarder does not use SSL to connect to the receiver.
# A value of "legacy" means the forwarder uses the 'clientCert' property to
# determine whether or not to use SSL to connect.
# Default: legacy
useSSL=false

# Whether or not to send processed or unprocessed data to the receiving server.
# A value of "true" means Splunk software processes the events before sending them
# to the server, thus "cooking" them.
# A value of "false" means events are raw and untouched prior to sending.
# Set to "false" if you are sending events to a third-party system.
# Default: true
sendCookedData=true

# The following has no effect in the Universal Forwarder, which can never index data.
# However it is automatically added by the Universal Forwarder's Ansible playbook,
# so let's define it beforehand.
[indexAndForward]
index = false
